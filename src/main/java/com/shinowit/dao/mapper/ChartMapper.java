package com.shinowit.dao.mapper;

import com.shinowit.entity.Chart;
import com.shinowit.entity.ChartCriteria;
import com.shinowit.entity.ChartWithBLOBs;
import java.util.List;
import org.apache.ibatis.annotations.Param;

public interface ChartMapper {


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int countByExample(ChartCriteria example);
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int deleteByExample(ChartCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int deleteByPrimaryKey(Integer chartId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int insert(ChartWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int insertSelective(ChartWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    List<ChartWithBLOBs> selectByExampleWithBLOBs(ChartCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    List<Chart> selectByExample(ChartCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    ChartWithBLOBs selectByPrimaryKey(Integer chartId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int updateByExampleSelective(@Param("record") ChartWithBLOBs record, @Param("example") ChartCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int updateByExampleWithBLOBs(@Param("record") ChartWithBLOBs record, @Param("example") ChartCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int updateByExample(@Param("record") Chart record, @Param("example") ChartCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int updateByPrimaryKeySelective(ChartWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int updateByPrimaryKeyWithBLOBs(ChartWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table chart
     *
     * @mbggenerated Tue Dec 30 15:50:09 CST 2014
     */
    int updateByPrimaryKey(Chart record);

    List<Chart> selectPage(ChartCriteria example);

    Integer selectMaxPrimaryKeyValue();
}